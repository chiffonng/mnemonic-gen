[project]
name = "mnemonic-gen"
version = "0.2.0"
description = "Generate mnemonic sentences for English words"
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
  "datasets>=2.19.1", # Hugging Face datasets
  "evaluate>=0.4.3",
  "hf-transfer>=0.1.8",
  "huggingface-hub>=0.26.1",
  "litellm>=1.63.3",
  "matplotlib>=3.9.2",
  "numpy<2.0.0",
  "peft>=0.13.2 ; sys_platform == 'linux'", # HF parameter-efficient training
  "pre-commit>=4.1.0", # Pre-commit hooks
  "python-dotenv>=1.0.1", # Load environment variables
  "pyyaml>=6.0.2", # YAML config
  "ruff>=0.9.10",
  "seaborn>=0.13.2",
  "torch==2.4.0 ; sys_platform == 'linux'",
  "transformers>=4.47.0",
  "trl>=0.11.4 ; sys_platform == 'linux'",
  "wandb>=0.19.0", # Weights and Biases for logging
]

[project.urls]
repository = "https://github.com/chiffonng/capstone"
dataset    = "https://doi.org/10.57967/hf/3750"

[project.optional-dependencies]
data = [
    "openai==1.65.0",
    "pandas>=2.2.3",
    "pyarrow>=18.1.0",
]

[tool.ruff]
src            = ["src"]
target-version = "py310"

[tool.ruff.format]
docstring-code-format      = true # format code in docstrings
docstring-code-line-length = 88

[tool.ruff.lint]
exclude = ["*.ipynb", "data/*", "logs/*", "test**", "tests/*", "tmp/*", "venv/*"]
extend-select = [
  "B",   # flake8-bugbear, bugbear checks
  "D",   # pydocstyle, all functions and classes must have docstrings
  "I",   # isort
  "N", # pep8-naming conventions
#  "PL", # pylint # TODO: enable
  "PT",  # flakes8-pytest-style, pytest fixtures and style
  "PTH", # flake8-use-pathlib, use pathlib instead of os.path
]
extend-safe-fixes = [
#  "ANN",  # missing type annotation # TODO: enable
  "D",    # pydocstyle docstrings
  "DOC",  # pydoclint docstring conventions
  "F",    # pyflakes
  "I002", # missing import
  "ICN",  # import conventions
  "LOG",  # logging conventions
  "Q",    # flake8-quotes
]
extend-fixable = ["B", "D"]
ignore = ["T201", "T203", "F401"] # print, pprint statements OK, unused imports OK
flake8-type-checking.quote-annotations = true
isort.case-sensitive = true
pydocstyle.convention = "google"
pycodestyle.max-doc-length = 88

[tool.ruff.lint.flake8-annotations] # type annotations
ignore-fully-untyped = true # ignore fully untyped functions
mypy-init-return = true  # omit return type in __init__ OK

[tool.ruff.lint.per-file-ignores]
"*__init__.py" = ["D104", "F401"]

[tool.uv]
python-downloads = "manual"         # change to "automatic" to download Python specified in .python-version
managed          = true

[tool.uv.pip]
upgrade-package  = ["ruff", "pre-commit"]
